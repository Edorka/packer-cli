# {{packageName}}

[![Build Status](https://travis-ci.org/yohangz/packer-cli.svg?branch=master)](https://travis-ci.org/yohangz/packer-cli)
[![MIT](https://img.shields.io/badge/license-MIT-blue.svg?style=flat)](https://github.com/yohangz/packer-cli/blob/master/LICENSE)
[![NPM VERSION](https://badge.fury.io/js/packer-cli.svg)](https://badge.fury.io/js/packer-cli)

> {{packageDescription}}

# Usage

```sh
# Run project on watch mode
npm run watch

# Production build
npm run build

# Run Style and script lint tasks
npm run lint

# Run style lint task
npm run lint:style

# Run script lint task
npm run lint:script

# Run unit test suite on development envrionemnt watch mode
npm run test

# Run unit test suite with coverage on development envrionemnt watch mode
npm run test:coverage

# Run unit test suite on continues integration environment mode
npm run test:ci

# Run unit test suite with coverage mode on continues integration environment mode
npm run test:coverage:ci

# Bump package version and push updated package config
npm version major|minor|patch

# Build project and publish to NPM
npm run release
```

# Project Structure

```
.
├── /.rpt2_cache/               # TypeScript build cache directory
├── /.tmp/                      # Watch build temporary artifact directory
├── /demo/                      # Demo source content (applicable if serve mode is enabled in config)
│   ├── /build/                 # Build demo page and assets
│   ├── /helper/                # Watch and build demo helper scripts
│   │   ├── require.js          # RequireJS static artifact
│   │   └── system.js           # SystemJS static artifact
│   └── /watch/                 # Watch demo page and assets
├── /src/                       # Library source of the project
├── /node_modules/              # Node modules directory
├── /dist/                      # Compiled distribution artifacts directory (Generated by build task)
│   ├── /bundles                # Directory containing main bundled artifacts (umd, amd, iife, system, ejs, esm)
│   ├── /fesm5                  # Directory containing FESM5 artifact.
│   ├── /fesmnext               # Directory containing FESMNEXT artifact.
│   ├── /styles                 # Directory containing compiled style sheets.
│   ├── /LICENSE                # Project license agreement file.
│   ├── /package.json           # Package.json file with publish artifact specific configuration.
│   └── /README.md              # Package documentation markup file.
├── /.build/                    # Build helpers files directory
│   ├── .banne.hbs              # Build artifact top banner comment template.
│   └── .bin.hbs                # Build artifact bin file template used in CLI projects
├── .editorconfig               # Define and maintain consistent coding styles between different editors and IDEs.
├── .babelrc.bundle.js          # Bundle build babel config.
├── .babelrc.es5.js             # ES5 build babel config.
├── .babelrc.esnext.js          # ESNext build babel config.
├── .eslintrc.yml               # ES Lint configuration.
├── .gitignore                  # Contains files to be ignored when pushing to git.
├── .packerrc.json              # This file contains library build configuration options.
├── .stylelintrc.json           # Style lint configuration.
├── .travis.yml                 # Travis CI configuration file.
├── karma.conf.js               # This file contains karma unit test runner configuration.
├── LICENSE                     # License agreement file
├── package.json                # NPM configuration and medata.
├── README.md                   # Project documentation markup file.
├── tsconfig.json               # This file contains base typescript compiler options and configuration.
└── tslint.json                 # TS Lint rules for the project.
```

# Build Configuration

Build configuration can be updated after project generation via ``.packerrc.json``.

```json
{
  "entry": "index.ts",
  "source": "src",
  "dist": "dist",
  "output": {
    "amd": {
      "define": "",
      "id": ""
    },
    "dependencyMapMode": "mapDependency",
    "esnext": true,
    "es5": true,
    "minBundle": true,
    "format": "umd",
    "imageInlineLimit": 1000000,
    "inlineStyle": false,
    "stylesDir": "styles",
    "namespace": "my.lib"
  },
  "compiler": {
    "buildMode": "browser",
    "scriptPreprocessor": "typescript",
    "stylePreprocessor": "scss",
    "styleSupport": true
  },
  "assetPaths": [
    "src/assets"
  ],
  "copy": [
    "README.md",
    "LICENSE"
  ],
  "bundle": {
    "externals": [
      "handlebars/runtime"
    ],
    "globals": {},
    "mapExternals": false
  },
  "ignore": [],
  "pathReplacePatterns": [
    {
      "replace": "./config/replace-config",
      "test": "./config/base-config"
    }
  ],
  "testFramework": "jasmine",
  "watch": {
    "demoDir": "demo/watch",
    "helperDir": "demo/helper",
    "open": true,
    "port": 4000,
    "scriptDir": ".tmp",
    "serve": true
  },
  "license": {
    "banner": true,
    "thirdParty": {
      "fileName": "dependencies.txt",
      "includePrivate": false
    }
  }
}
```

| Config                      	| Type             	| Definition                                                                       	                                                                                                                             |
|-----------------------------	|------------------	|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| entry                       	| string           	| entry source file                                                            	                                                                                                                                 |
| source                      	| string           	| source directory                                                                 	                                                                                                                             |
| dist                          | string           	| build artifact output directory                                                                                                                                                                                |
| output                        | object           	| Build artifact output generation config                                                                                                                                                                        |
| output.amd                 	  | object          	| AMD flat bundle configuration                                                    	                                                                                                                             |
| output.amd.define             | string          	| AMD flat bundle define function name                                                                                                                                                                           |
| output.amd.id                 | string          	| AMD flat bundle module identifier name                                                                                                                                                                         |
| output.dependencyMapMode      | object            | Dependency map modes                                                                                                                                                                                           |
|                               |                   | "cross-map-peer-dependency" - Map project dependencies to target peerDependencies                                                                                                                              |
|                               |                   | "cross-map-dependency" - Map project peerDependencies to target dependencies                                                                                                                                   |
|                               |                   | "map-dependency" - Map project dependencies to target dependencies                                                                                                                                             |
|                               |                   | "map-peer-dependency" - Map project peer dependencies to target peerDependencies                                                                                                                               |
|                               |                   | "all" - Map both peerDependencies and dependencies to target peerDependencies and dependencies                                                                                                                 |
| output.es5                    | boolean           | Generate flat ES5 module build artifacts based on ``.babelrc.es5.js``                                                                                                                                          |
| output.esnext                 | boolean           | Generate flat ESNext module build artifacts based on ``.babelrc.esnext.js``                                                                                                                                    |
| output.minBundle              | boolean           | Generate minified flat bundle build artifact                                                                                                                                                                   |
| output.format                	| string           	| Browser compliant bundle modules formats (based on ``.babelrc.bundle.js``)                                                                                                                                     |
|                               |                   | "umd" – Universal Module Definition, works as amd, cjs and iife all in one                                                                                                                                     |
|                               |                   | "amd" – Asynchronous Module Definition, used with module loaders like RequireJS                                                                                                                                |
|                               |                   | "iife" – A self-executing function, suitable for inclusion as a <script> tag. (If you want to create a bundle for your application, you probably want to use this, because it leads to smaller file sizes.)    |
|                               |                   | "system" - Native format of SystemJS loader                                                                                                                                                                    |
|                               |                   | NodeJS only bundle module formats                                                                                                                                                                              |
|                               |                   | "cjs" – CommonJS, suitable for Node and Browserify/Webpack                                                                                                                                                     |
|                               |                   | "esm" – Keep the bundle as an ES module file                                                                                                                                                                   |
| output.imageInlineLimit       | number            | Size limit in bytes to inline compile images                                                                                                                                                                   |
| output.inlineStyle            | boolean           | Inline bundle styles withing JS distribution if true                                                                                                                                                           |
| output.stylesDir              | string            | Style artifact output directory within dist                                                                                                                                                                    |
| output.namespace              | string            | Library global scope namespace (only applicable for browser compliant)                                                                                                                                         |
| output.sourceMap              | string or boolean | If true, a separate sourcemap file will be created. If inline, the sourcemap will be appended to the resulting output file as a data URI.                                                                      |
| compiler                      | object            | Compiler options object                                                                                                                                                                                        |
| compiler.buildMode            | string            | Library compile mode                                                                                                                                                                                           |
|                               |                   | "browser" - Browser/NodeJS compliant module                                                                                                                                                                    |
|                               |                   | "node" - NodeJS only module                                                                                                                                                                                    |
|                               |                   | "node-cli" - Node CLI module                                                                                                                                                                                   |
| compiler.scriptPreprocessor   | string            | Support "typescript" and "none" options                                                                                                                                                                        |
| compiler.stylePreprocessor    | string            | Support "scss", "sass", "stylus", "less" and "none" options                                                                                                                                                    |
| compiler.styleSupport         | boolean           | Support style preprocessing and linting                                                                                                                                                                        |
| assetPaths                    | array of strings 	| List of paths which contains static assets referenced in style sheets                                                                                                                                          |
| copy                          | array of strings 	| List of files paths to copy on build.                                                                                                                                                                          |
| bundle                        | object            | Bundle options                                                                                                                                                                                                 |
| bundle.externals              | array of string   | Bundle output external dependencies (dependency modules to treat as externals). Refer [rollup](https://rollupjs.org) options for more info.                                                                    |
| bundle.globals                | object            | Bundle output global dependencies (dependency modules to tread as globals). Refer [rollup](https://rollupjs.org) options for more info.                                                                        |
| bundle.mapExternals           | boolean           | Treat globals as externals if true                                                                                                                                                                             |
| bundle.ignore                 | array of strings 	| Import paths to ignore with noop implementation                                                                                                                                                                |
| pathReplacePatterns         	| array of objects 	| Import path replace pattern collection                                           	                                                                                                                             |
| pathReplacePatterns.test    	| string           	| Path to find                                                                     	                                                                                                                             |
| pathReplacePatterns.replace 	| string           	| Path to replace                                                                  	                                                                                                                             |
| testFramework                 | string            | Support "Jasmine" and "Mocha" test framework options                                                                                                                                                           |
| watch                       	| object           	| watch mode configuration object                                                  	                                                                                                                             |
| watch.scriptDir               | string           	| watch build temporary directory                                                       	                                                                                                                       |
| watch.helperDir               | string           	| watch build helper library directory                                                                                                                                                                           |
| watch.demoDir                 | string           	| watch demo page dir                                                              	                                                                                                                             |
| watch.port                  	| number           	| watch server port                                                                	                                                                                                                             |
| watch.serve                  	| boolean          	| Serve project via browser on watch mode                                                                                                                                                                        |
| watch.open                  	| boolean          	| open browser automatically on watch mode                                                      	                                                                                                               |
| license                       | object            | Bundle license configuration                                                                                                                                                                                   |
| license.banner                | boolean           | Include inline header banner passed via ``.banner.hbs`` template                                                                                                                                               |

# Contributions

Feel free to open an issue or create a PR
